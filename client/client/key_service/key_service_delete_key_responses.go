package key_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"../../client/models"
)

// KeyServiceDeleteKeyReader is a Reader for the KeyServiceDeleteKey structure.
type KeyServiceDeleteKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KeyServiceDeleteKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewKeyServiceDeleteKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewKeyServiceDeleteKeyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewKeyServiceDeleteKeyOK creates a KeyServiceDeleteKeyOK with default headers values
func NewKeyServiceDeleteKeyOK() *KeyServiceDeleteKeyOK {
	return &KeyServiceDeleteKeyOK{}
}

/*KeyServiceDeleteKeyOK handles this case with default header values.

A successful response.
*/
type KeyServiceDeleteKeyOK struct {
	Payload *models.ExampleV1RfidDto
}

func (o *KeyServiceDeleteKeyOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/keys/{id}][%d] keyServiceDeleteKeyOK  %+v", 200, o.Payload)
}

func (o *KeyServiceDeleteKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExampleV1RfidDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKeyServiceDeleteKeyDefault creates a KeyServiceDeleteKeyDefault with default headers values
func NewKeyServiceDeleteKeyDefault(code int) *KeyServiceDeleteKeyDefault {
	return &KeyServiceDeleteKeyDefault{
		_statusCode: code,
	}
}

/*KeyServiceDeleteKeyDefault handles this case with default header values.

An unexpected error response.
*/
type KeyServiceDeleteKeyDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the key service delete key default response
func (o *KeyServiceDeleteKeyDefault) Code() int {
	return o._statusCode
}

func (o *KeyServiceDeleteKeyDefault) Error() string {
	return fmt.Sprintf("[DELETE /v1/keys/{id}][%d] KeyService_DeleteKey default  %+v", o._statusCode, o.Payload)
}

func (o *KeyServiceDeleteKeyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
