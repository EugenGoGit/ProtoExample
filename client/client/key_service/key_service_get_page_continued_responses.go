package key_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"../../client/models"
)

// KeyServiceGetPageContinuedReader is a Reader for the KeyServiceGetPageContinued structure.
type KeyServiceGetPageContinuedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KeyServiceGetPageContinuedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewKeyServiceGetPageContinuedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewKeyServiceGetPageContinuedDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewKeyServiceGetPageContinuedOK creates a KeyServiceGetPageContinuedOK with default headers values
func NewKeyServiceGetPageContinuedOK() *KeyServiceGetPageContinuedOK {
	return &KeyServiceGetPageContinuedOK{}
}

/*KeyServiceGetPageContinuedOK handles this case with default header values.

A successful response.
*/
type KeyServiceGetPageContinuedOK struct {
	Payload *models.ExampleListKeysResponse
}

func (o *KeyServiceGetPageContinuedOK) Error() string {
	return fmt.Sprintf("[GET /v1/keys-continued-list][%d] keyServiceGetPageContinuedOK  %+v", 200, o.Payload)
}

func (o *KeyServiceGetPageContinuedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExampleListKeysResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKeyServiceGetPageContinuedDefault creates a KeyServiceGetPageContinuedDefault with default headers values
func NewKeyServiceGetPageContinuedDefault(code int) *KeyServiceGetPageContinuedDefault {
	return &KeyServiceGetPageContinuedDefault{
		_statusCode: code,
	}
}

/*KeyServiceGetPageContinuedDefault handles this case with default header values.

An unexpected error response.
*/
type KeyServiceGetPageContinuedDefault struct {
	_statusCode int

	Payload *models.RuntimeError
}

// Code gets the status code for the key service get page continued default response
func (o *KeyServiceGetPageContinuedDefault) Code() int {
	return o._statusCode
}

func (o *KeyServiceGetPageContinuedDefault) Error() string {
	return fmt.Sprintf("[GET /v1/keys-continued-list][%d] KeyService_GetPageContinued default  %+v", o._statusCode, o.Payload)
}

func (o *KeyServiceGetPageContinuedDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RuntimeError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
