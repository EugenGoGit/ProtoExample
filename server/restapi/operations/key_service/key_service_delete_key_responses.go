package key_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"../../server/models"
)

// KeyServiceDeleteKeyOKCode is the HTTP code returned for type KeyServiceDeleteKeyOK
const KeyServiceDeleteKeyOKCode int = 200

/*KeyServiceDeleteKeyOK A successful response.

swagger:response keyServiceDeleteKeyOK
*/
type KeyServiceDeleteKeyOK struct {

	/*
	  In: Body
	*/
	Payload *models.ExampleV1RfidDto `json:"body,omitempty"`
}

// NewKeyServiceDeleteKeyOK creates KeyServiceDeleteKeyOK with default headers values
func NewKeyServiceDeleteKeyOK() *KeyServiceDeleteKeyOK {
	return &KeyServiceDeleteKeyOK{}
}

// WithPayload adds the payload to the key service delete key o k response
func (o *KeyServiceDeleteKeyOK) WithPayload(payload *models.ExampleV1RfidDto) *KeyServiceDeleteKeyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the key service delete key o k response
func (o *KeyServiceDeleteKeyOK) SetPayload(payload *models.ExampleV1RfidDto) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *KeyServiceDeleteKeyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*KeyServiceDeleteKeyDefault An unexpected error response.

swagger:response keyServiceDeleteKeyDefault
*/
type KeyServiceDeleteKeyDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.RuntimeError `json:"body,omitempty"`
}

// NewKeyServiceDeleteKeyDefault creates KeyServiceDeleteKeyDefault with default headers values
func NewKeyServiceDeleteKeyDefault(code int) *KeyServiceDeleteKeyDefault {
	if code <= 0 {
		code = 500
	}

	return &KeyServiceDeleteKeyDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the key service delete key default response
func (o *KeyServiceDeleteKeyDefault) WithStatusCode(code int) *KeyServiceDeleteKeyDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the key service delete key default response
func (o *KeyServiceDeleteKeyDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the key service delete key default response
func (o *KeyServiceDeleteKeyDefault) WithPayload(payload *models.RuntimeError) *KeyServiceDeleteKeyDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the key service delete key default response
func (o *KeyServiceDeleteKeyDefault) SetPayload(payload *models.RuntimeError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *KeyServiceDeleteKeyDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
